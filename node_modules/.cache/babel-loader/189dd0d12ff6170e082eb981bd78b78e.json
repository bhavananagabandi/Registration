{"ast":null,"code":"var _jsxFileName = \"/Users/bhanu/Desktop/Registration-wizard/src/components/Field.jsx\";\nimport { Field } from \"react-final-form\";\nimport { checkValidations } from '../utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const FormField = ({\n  name,\n  type\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Field, {\n      name: `${name}`,\n      validate: checkValidations(name),\n      children: ({\n        input,\n        meta\n      }) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: `${name}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...input,\n          type: `${type}`,\n          placeholder: `${name}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 25\n        }, this), meta.error && meta.touched && /*#__PURE__*/_jsxDEV(\"span\", {\n          children: meta.error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 56\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 9\n  }, this);\n};\n_c = FormField;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormField\");","map":{"version":3,"sources":["/Users/bhanu/Desktop/Registration-wizard/src/components/Field.jsx"],"names":["Field","checkValidations","FormField","name","type","input","meta","error","touched"],"mappings":";AAAA,SAASA,KAAT,QAAsB,kBAAtB;AACA,SAASC,gBAAT,QAAiC,UAAjC;;AAEA,OAAO,MAAMC,SAAS,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOC,EAAAA;AAAP,CAAD,KAAkB;AACvC,sBACI;AAAA,2BACA,QAAC,KAAD;AAAO,MAAA,IAAI,EAAI,GAAED,IAAK,EAAtB;AAAyB,MAAA,QAAQ,EAAEF,gBAAgB,CAACE,IAAD,CAAnD;AAAA,gBACa,CAAC;AAAEE,QAAAA,KAAF;AAASC,QAAAA;AAAT,OAAD,kBACD;AAAA,gCACI;AAAA,oBAAS,GAAEH,IAAK;AAAhB;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,sBAAWE,KAAX;AAAkB,UAAA,IAAI,EAAG,GAAED,IAAK,EAAhC;AAAmC,UAAA,WAAW,EAAG,GAAED,IAAK;AAAxD;AAAA;AAAA;AAAA;AAAA,gBAFJ,EAGKG,IAAI,CAACC,KAAL,IAAcD,IAAI,CAACE,OAAnB,iBAA8B;AAAA,oBAAOF,IAAI,CAACC;AAAZ;AAAA;AAAA;AAAA;AAAA,gBAHnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAFZ;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH,CAdM;KAAML,S","sourcesContent":["import { Field } from \"react-final-form\";\nimport { checkValidations } from '../utils';\n\nexport const FormField = ({name, type}) => {\n    return (\n        <div>\n        <Field name= {`${name}`} validate={checkValidations(name)}>\n                    {({ input, meta }) => (\n                    <div>\n                        <label>{`${name}`}</label>\n                        <input {...input} type={`${type}`} placeholder={`${name}`} />\n                        {meta.error && meta.touched && <span>{meta.error}</span>}\n                    </div>\n                    )}\n        </Field>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}