{"ast":null,"code":"import _objectSpread from\"/Users/bhanu/Desktop/Registration/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _regeneratorRuntime from\"/Users/bhanu/Desktop/Registration/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/bhanu/Desktop/Registration/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/bhanu/Desktop/Registration/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{useHistory}from'react-router';import PlacesAutocomplete from'react-places-autocomplete';import{Button}from'../components/Button';import{saveValues}from'../actions';import{connect}from'react-redux';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Address=function Address(props){var _props$Address=props.Address,Address=_props$Address===void 0?'':_props$Address,saveFormValues=props.saveFormValues;var _useState=useState(Address),_useState2=_slicedToArray(_useState,2),place=_useState2[0],setPlace=_useState2[1];var history=useHistory();var handleChange=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(value){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:setPlace(value);saveFormValues({Address:value});case 2:case\"end\":return _context.stop();}}},_callee);}));return function handleChange(_x){return _ref.apply(this,arguments);};}();var onSubmit=function onSubmit(){history.push('/Confirmation');};return/*#__PURE__*/_jsxs(\"div\",{style:{position:'absolute',left:'50%',top:'50%',transform:'translate(-50%, -50%)'},children:[/*#__PURE__*/_jsx(\"h1\",{children:\"We need this last piece of information before you submit this form\"}),/*#__PURE__*/_jsx(\"label\",{style:{PaddingRight:'10px',fontSize:'24px'},children:\"Address\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:onSubmit,children:[/*#__PURE__*/_jsx(PlacesAutocomplete,{value:place,onChange:setPlace,onSelect:handleChange,children:function children(_ref2){var getInputProps=_ref2.getInputProps,suggestions=_ref2.suggestions,getSuggestionItemProps=_ref2.getSuggestionItemProps,loading=_ref2.loading;return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",_objectSpread({style:{fontSize:'24px'},name:\"Address\"},getInputProps({placeholder:'Enter your place...'}))),/*#__PURE__*/_jsxs(\"div\",{children:[loading&&/*#__PURE__*/_jsx(\"div\",{children:\"Loading...\"}),suggestions.map(function(suggestion){var style=suggestion.active?{backgroundColor:'#d9d9f3',cursor:'pointer'}:{backgroundColor:'#ffffff',cursor:'pointer'};return/*#__PURE__*/_jsx(\"div\",_objectSpread(_objectSpread({},getSuggestionItemProps(suggestion,{style:style})),{},{children:/*#__PURE__*/_jsx(\"span\",{children:suggestion.description})}));})]})]});}}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Button,{})})]})]});};var mapStateToProps=function mapStateToProps(state){var Address=state.values.formValues.Address;return{Address:Address};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{saveFormValues:function saveFormValues(values){dispatch(saveValues(values));}};};export default connect(mapStateToProps,mapDispatchToProps)(Address);","map":{"version":3,"sources":["/Users/bhanu/Desktop/Registration/src/components/Address.jsx"],"names":["React","useState","useHistory","PlacesAutocomplete","Button","saveValues","connect","Address","props","saveFormValues","place","setPlace","history","handleChange","value","onSubmit","push","position","left","top","transform","PaddingRight","fontSize","getInputProps","suggestions","getSuggestionItemProps","loading","placeholder","map","suggestion","style","active","backgroundColor","cursor","description","mapStateToProps","state","values","formValues","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport { useHistory } from 'react-router';\nimport PlacesAutocomplete from 'react-places-autocomplete';\nimport {Button} from '../components/Button';\nimport { saveValues } from '../actions';\nimport { connect } from 'react-redux';\n\nconst Address = (props) => {\n    const {Address = '' , saveFormValues} = props;\n    const [place, setPlace] = useState(Address);\n\n    const history = useHistory();\n    const handleChange = async value => {\n        setPlace(value);\n        saveFormValues({Address: value})\n    }\n    const onSubmit = () => {\n        history.push('/Confirmation')\n    }\n    \n    return (\n            <div style={{\n                position: 'absolute', left: '50%', top: '50%',\n                transform: 'translate(-50%, -50%)'\n            }}>\n            <h1>We need this last piece of information before you submit this form</h1>\n            <label style = {{PaddingRight:'10px', fontSize: '24px'}}>Address</label>\n            <form onSubmit={onSubmit}>\n           <PlacesAutocomplete value={place} onChange={setPlace} onSelect={handleChange}>\n           {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n            <div >\n                <input style = {{fontSize: '24px'}} name='Address'\n                {...getInputProps({\n                    placeholder: 'Enter your place...',\n                })}\n                />\n                <div>\n                    {loading && <div>Loading...</div>}\n                    {suggestions.map(suggestion => {\n                        const style = suggestion.active\n                        ? { backgroundColor: '#d9d9f3', cursor: 'pointer' }\n                        : { backgroundColor: '#ffffff', cursor: 'pointer' };\n                    return (\n                        <div\n                            {...getSuggestionItemProps(suggestion, {\n                            style,\n                            })}\n                        >\n                            <span>{suggestion.description}</span>\n                        </div>\n                        );\n                    })}\n                </div>\n            </div>\n           )}\n            </PlacesAutocomplete> \n            <div>\n              <Button/>\n            </div>\n            </form>\n            </div>\n    );\n};\n\nconst mapStateToProps = (state) => {\n    const { Address } = state.values.formValues;\n    return {\n        Address\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n      saveFormValues : (values) => {\n        dispatch(saveValues(values));\n      }\n    }\n  }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Address);"]},"metadata":{},"sourceType":"module"}