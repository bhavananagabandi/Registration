{"ast":null,"code":"var _jsxFileName = \"/Users/bhanu/Desktop/Registration/src/components/Name.jsx\",\n    _s = $RefreshSig$();\n\nimport { Form } from \"react-final-form\";\nimport { useHistory } from 'react-router';\nimport { saveValues } from '../actions';\nimport { connect } from 'react-redux';\nimport { FormField } from '../components/Field';\nimport { Button } from '../components/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Name = props => {\n  _s();\n\n  const {\n    FirstName,\n    LastName,\n    saveFormValues\n  } = props;\n  const history = useHistory();\n\n  const onSubmit = async values => {\n    saveFormValues(values);\n    history.push('./PersonalInfo');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'absolute',\n      left: '50%',\n      top: '50%',\n      transform: 'translate(-50%, -50%)'\n    },\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: onSubmit,\n      initialValues: {\n        FirstName,\n        LastName\n      },\n      render: ({\n        handleSubmit,\n        invalid\n      }) => /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Let's collect some basic information\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormField, {\n          name: \"FirstName\",\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(FormField, {\n          name: \"LastName\",\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            isDisabled: invalid\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 14\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Name, \"9cZfZ04734qoCGIctmKX7+sX6eU=\", false, function () {\n  return [useHistory];\n});\n\n_c = Name;\n\nconst mapStateToProps = state => {\n  const {\n    FirstName,\n    LastName\n  } = state.values.formValues;\n  return {\n    FirstName,\n    LastName\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    saveFormValues: values => {\n      dispatch(saveValues(values));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Name);\n\nvar _c;\n\n$RefreshReg$(_c, \"Name\");","map":{"version":3,"sources":["/Users/bhanu/Desktop/Registration/src/components/Name.jsx"],"names":["Form","useHistory","saveValues","connect","FormField","Button","Name","props","FirstName","LastName","saveFormValues","history","onSubmit","values","push","position","left","top","transform","handleSubmit","invalid","mapStateToProps","state","formValues","mapDispatchToProps","dispatch"],"mappings":";;;AAAA,SAASA,IAAT,QAAqB,kBAArB;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,UAAT,QAA2B,YAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAAQC,SAAR,QAAwB,qBAAxB;AACA,SAAQC,MAAR,QAAqB,sBAArB;;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AAAA;;AACpB,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,QAAb;AAAuBC,IAAAA;AAAvB,MAAyCH,KAA/C;AACA,QAAMI,OAAO,GAAGV,UAAU,EAA1B;;AACA,QAAMW,QAAQ,GAAG,MAAMC,MAAN,IAAgB;AAC7BH,IAAAA,cAAc,CAACG,MAAD,CAAd;AACAF,IAAAA,OAAO,CAACG,IAAR,CAAa,gBAAb;AACD,GAHH;;AAIA,sBACE;AAAK,IAAA,KAAK,EAAE;AACVC,MAAAA,QAAQ,EAAE,UADA;AACYC,MAAAA,IAAI,EAAE,KADlB;AACyBC,MAAAA,GAAG,EAAE,KAD9B;AAEVC,MAAAA,SAAS,EAAE;AAFD,KAAZ;AAAA,2BAIE,QAAC,IAAD;AACA,MAAA,QAAQ,EAAEN,QADV;AAEA,MAAA,aAAa,EAAE;AAACJ,QAAAA,SAAD;AAAYC,QAAAA;AAAZ,OAFf;AAGA,MAAA,MAAM,EAAE,CAAC;AAAEU,QAAAA,YAAF;AAAgBC,QAAAA;AAAhB,OAAD,kBACN;AAAM,QAAA,QAAQ,EAAED,YAAhB;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEI,QAAC,SAAD;AAAW,UAAA,IAAI,EAAG,WAAlB;AAA8B,UAAA,IAAI,EAAG;AAArC;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI,QAAC,SAAD;AAAW,UAAA,IAAI,EAAG,UAAlB;AAA6B,UAAA,IAAI,EAAG;AAApC;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAIG;AAAA,iCACC,QAAC,MAAD;AAAQ,YAAA,UAAU,EAAIC;AAAtB;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,gBAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,UADF;AAuBH,CA9BD;;GAAMd,I;UAEcL,U;;;KAFdK,I;;AAgCN,MAAMe,eAAe,GAAIC,KAAD,IAAW;AAC/B,QAAM;AAAEd,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAA0Ba,KAAK,CAACT,MAAN,CAAaU,UAA7C;AACA,SAAO;AACHf,IAAAA,SADG;AAEHC,IAAAA;AAFG,GAAP;AAIH,CAND;;AAQA,MAAMe,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLf,IAAAA,cAAc,EAAIG,MAAD,IAAY;AAC3BY,MAAAA,QAAQ,CAACvB,UAAU,CAACW,MAAD,CAAX,CAAR;AACD;AAHI,GAAP;AAKD,CAND;;AAQA,eAAeV,OAAO,CAACkB,eAAD,EAAmBG,kBAAnB,CAAP,CAA8ClB,IAA9C,CAAf","sourcesContent":["import { Form } from \"react-final-form\";\nimport { useHistory } from 'react-router';\nimport { saveValues } from '../actions';\nimport { connect } from 'react-redux';\nimport {FormField} from '../components/Field';\nimport {Button} from '../components/Button';\n\nconst Name = (props) => {\n    const { FirstName, LastName, saveFormValues} = props;\n    const history = useHistory();\n    const onSubmit = async values => {\n        saveFormValues(values);\n        history.push('./PersonalInfo');\n      }\n    return (\n      <div style={{\n        position: 'absolute', left: '50%', top: '50%',\n        transform: 'translate(-50%, -50%)'\n    }}>\n        <Form\n        onSubmit={onSubmit}\n        initialValues={{FirstName, LastName}}\n        render={({ handleSubmit, invalid }) => (\n          <form onSubmit={handleSubmit}>\n            <h1>Let's collect some basic information</h1>\n              <FormField name = 'FirstName' type = 'text' />\n              <FormField name = 'LastName' type = 'text' />\n             <div>\n              <Button isDisabled = {invalid}/>\n            </div>\n          </form>\n          \n        )}\n        \n      />\n      </div>\n    );\n};\n\nconst mapStateToProps = (state) => {\n    const { FirstName, LastName } = state.values.formValues;\n    return {\n        FirstName,\n        LastName\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    saveFormValues : (values) => {\n      dispatch(saveValues(values));\n    }\n  }\n}\n\nexport default connect(mapStateToProps , mapDispatchToProps)(Name);"]},"metadata":{},"sourceType":"module"}