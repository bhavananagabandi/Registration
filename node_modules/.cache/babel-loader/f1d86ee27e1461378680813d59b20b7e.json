{"ast":null,"code":"var _jsxFileName = \"/Users/bhanu/Desktop/Registration-wizard/src/components/Address.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router';\nimport PlacesAutocomplete from 'react-places-autocomplete';\nimport { Button } from '../components/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Address = () => {\n  _s();\n\n  const [place, setPlace] = useState(\"\");\n\n  const handleSelect = async value => {};\n\n  const history = useHistory();\n\n  const handleClick = () => {\n    history.push('/Confirmation');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(PlacesAutocomplete, {\n      value: place,\n      onChange: setPlace,\n      onSelect: handleSelect,\n      children: ({\n        getInputProps,\n        suggestions,\n        getSuggestionItemProps,\n        loading\n      }) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps({\n            placeholder: 'Enter your place...'\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [loading && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 33\n          }, this), suggestions.map(suggestion => {\n            const style = suggestion.active ? {\n              backgroundColor: '#d9d9f3',\n              cursor: 'pointer'\n            } : {\n              backgroundColor: '#ffffff',\n              cursor: 'pointer'\n            };\n            return /*#__PURE__*/_jsxDEV(\"div\", { ...getSuggestionItemProps(suggestion, {\n                style\n              }),\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: suggestion.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 25\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Button, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Address, \"nfL3HMzXp0EbnxRr4lFXLcwTcrc=\", false, function () {\n  return [useHistory];\n});\n\n_c = Address;\n\nvar _c;\n\n$RefreshReg$(_c, \"Address\");","map":{"version":3,"sources":["/Users/bhanu/Desktop/Registration-wizard/src/components/Address.jsx"],"names":["React","useState","useHistory","PlacesAutocomplete","Button","Address","place","setPlace","handleSelect","value","history","handleClick","push","getInputProps","suggestions","getSuggestionItemProps","loading","placeholder","map","suggestion","style","active","backgroundColor","cursor","description"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,OAAOC,kBAAP,MAA+B,2BAA/B;AACA,SAAQC,MAAR,QAAqB,sBAArB;;AAEA,OAAO,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACzB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;;AACA,QAAMO,YAAY,GAAG,MAAMC,KAAN,IAAe,CAEnC,CAFD;;AAGA,QAAMC,OAAO,GAAGR,UAAU,EAA1B;;AAEA,QAAMS,WAAW,GAAG,MAAM;AACtBD,IAAAA,OAAO,CAACE,IAAR,CAAa,eAAb;AACH,GAFD;;AAIA,sBACI;AAAA,4BACG,QAAC,kBAAD;AAAoB,MAAA,KAAK,EAAEN,KAA3B;AAAkC,MAAA,QAAQ,EAAEC,QAA5C;AAAsD,MAAA,QAAQ,EAAEC,YAAhE;AAAA,gBACC,CAAC;AAAEK,QAAAA,aAAF;AAAiBC,QAAAA,WAAjB;AAA8BC,QAAAA,sBAA9B;AAAsDC,QAAAA;AAAtD,OAAD,kBACA;AAAA,gCACI,sBACIH,aAAa,CAAC;AACdI,YAAAA,WAAW,EAAE;AADC,WAAD;AADjB;AAAA;AAAA;AAAA;AAAA,gBADJ,eAMI;AAAA,qBACKD,OAAO,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADhB,EAEKF,WAAW,CAACI,GAAZ,CAAgBC,UAAU,IAAI;AAC3B,kBAAMC,KAAK,GAAGD,UAAU,CAACE,MAAX,GACZ;AAAEC,cAAAA,eAAe,EAAE,SAAnB;AAA8BC,cAAAA,MAAM,EAAE;AAAtC,aADY,GAEZ;AAAED,cAAAA,eAAe,EAAE,SAAnB;AAA8BC,cAAAA,MAAM,EAAE;AAAtC,aAFF;AAGJ,gCACI,oBACQR,sBAAsB,CAACI,UAAD,EAAa;AACvCC,gBAAAA;AADuC,eAAb,CAD9B;AAAA,qCAKI;AAAA,0BAAOD,UAAU,CAACK;AAAlB;AAAA;AAAA;AAAA;AAAA;AALJ;AAAA;AAAA;AAAA;AAAA,oBADJ;AASC,WAbA,CAFL;AAAA;AAAA;AAAA;AAAA;AAAA,gBANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFD;AAAA;AAAA;AAAA;AAAA,YADH,eA6BI;AAAA,6BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YA7BJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAmCH,CA9CM;;GAAMnB,O;UAKOH,U;;;KALPG,O","sourcesContent":["import React, {useState} from 'react'\nimport { useHistory } from 'react-router';\nimport PlacesAutocomplete from 'react-places-autocomplete';\nimport {Button} from '../components/Button';\n\nexport const Address = () => {\n    const [place, setPlace] = useState(\"\")\n    const handleSelect = async value => {\n\n    }\n    const history = useHistory();\n\n    const handleClick = () => {\n        history.push('/Confirmation');\n    }\n\n    return (\n        <div>\n           <PlacesAutocomplete value={place} onChange={setPlace} onSelect={handleSelect}>\n           {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n            <div>\n                <input\n                {...getInputProps({\n                    placeholder: 'Enter your place...',\n                })}\n                />\n                <div>\n                    {loading && <div>Loading...</div>}\n                    {suggestions.map(suggestion => {\n                        const style = suggestion.active\n                        ? { backgroundColor: '#d9d9f3', cursor: 'pointer' }\n                        : { backgroundColor: '#ffffff', cursor: 'pointer' };\n                    return (\n                        <div\n                            {...getSuggestionItemProps(suggestion, {\n                            style,\n                            })}\n                        >\n                            <span>{suggestion.description}</span>\n                        </div>\n                        );\n                    })}\n                </div>\n            </div>\n           )}\n            </PlacesAutocomplete> \n            <div>\n              <Button/>\n            </div>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}